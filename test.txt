
ffmpeg -y -i test.mkv -filter_complex "[0:v] fps=7,scale=w=1500:h=-1,split [a][b];[a] palettegen=stats_mode=single [p];[b][p] paletteuse=new=1" StickAroundPerFrame.gif


ffmpeg -y -i test.mkv -vf "fps=10,scale=1500:-1:flags=lanczos,split[s0][s1];[s0]palettegen[p];[s1][p]paletteuse" -loop 0 output.gif


select replace(DDL,'B DATE' ,'B timestampNTZ(0)') new_ddl
from
(select get_ddl('table' , 'test') as DDL)



 head -10 *


I doubt if tree can accomplish this. However, find can:

find . -mindepth 3 -maxdepth 3 -type f | wc -l

would return the number of files at level 3.


# list the number of files per level?

    find . -type d | \
    perl -ne 'BEGIN{ sub cnt{ $file=shift; $c="find $file -maxdepth 1 -type f | wc -l";int(`$c`) }} chomp; printf "%s %s\n", $_, cnt($_)' | \
    perl -ne '/^(.*) (\d*)$/; $_{scalar(split /\//, $1)}+=$2; END { printf "Depth %d has %d files.\n", @$_ for map { [$_,$_{$_}] } sort keys %_ }'



Results:

Depth 1 has 7 files.
Depth 2 has 2353 files.
Depth 3 has 2558 files.
Depth 4 has 8242 files.
Depth 5 has 6452 files.
Depth 6 has 674 files.
Depth 7 has 1112 files.
Depth 8 has 64 files.
Depth 9 has 154 files.

    aws s3 sync /home/ubuntu/santhosh/sftp-datavant-com/covid19_commonprofile/outbound/officeally/no-token s3://santhosh-common-profile-linked-dataset/officeally/no-token/

https://docs.snowflake.com/en/sql-reference/sql/copy-into-table.html#validating-staged-files

Validating Staged Files
Validate files in a stage without loading:

Run the COPY command in validation mode and see all errors:

copy into mytable validation_mode = 'RETURN_ERRORS';

+-------------------------------------------------------------------------------------------------------------------------------+------------------------+------+-----------+-------------+----------+--------+-----------+----------------------+------------+----------------+
|                                                         ERROR                                                                 |            FILE        | LINE | CHARACTER | BYTE_OFFSET | CATEGORY |  CODE  | SQL_STATE |   COLUMN_NAME        | ROW_NUMBER | ROW_START_LINE |
+-------------------------------------------------------------------------------------------------------------------------------+------------------------+------+-----------+-------------+----------+--------+-----------+----------------------+------------+----------------+
| Field delimiter ',' found while expecting record delimiter '\n'                                                               | @MYTABLE/data1.csv.gz  | 3    | 21        | 76          | parsing  | 100016 | 22000     | "MYTABLE"["QUOTA":3] | 3          | 3              |
| NULL result in a non-nullable column. Use quotes if an empty field should be interpreted as an empty string instead of a null | @MYTABLE/data3.csv.gz  | 3    | 2         | 62          | parsing  | 100088 | 22000     | "MYTABLE"["NAME":1]  | 3          | 3              |
| End of record reached while expected to parse column '"MYTABLE"["QUOTA":3]'                                                   | @MYTABLE/data3.csv.gz  | 4    | 20        | 96          | parsing  | 100068 | 22000     | "MYTABLE"["QUOTA":3] | 4          | 4              |
+-------------------------------------------------------------------------------------------------------------------------------+------------------------+------+-----------+-------------+----------+--------+-----------+----------------------+------------+----------------+
Run the COPY command in validation mode for a specified number of rows. In this example, the first run encounters no errors in the specified number of rows and completes successfully, displaying the information as it will appear when loaded into the table. The second run encounters an error in the specified number of rows and fails with the error encountered:

copy into mytable validation_mode = 'RETURN_2_ROWS';

+--------------------+----------+-------+
|        NAME        |    ID    | QUOTA |
+--------------------+----------+-------+
| Joe Smith          |  456111  | 0     |
| Tom Jones          |  111111  | 3400  |
+--------------------+----------+-------+

copy into mytable validation_mode = 'RETURN_3_ROWS';

failure: NULL result in a non-nullable column. use quotes if an empty field should be interpreted as an empty string instead of a null
  file '@MYTABLE/data3.csv.gz', line 3, character 2
  row 3, column "MYTABLE"["NAME":1]

############################################################################################################


https://docs.snowflake.com/en/user-guide/data-load-s3-copy.html

# Loading data requires a warehouse. If you are using a warehouse that is not configured to auto resume, execute ALTER WAREHOUSE to resume the warehouse. Note that starting the warehouse could take up to five minutes.

alter warehouse compute_wh resume;


use ACCOUNTADMIN;


copy into "COVID19_PROD"."COVID19_COMMONPROFILE_ANALYTICSIQ"."ANALYTICSIQ_PEOPLECORE"
  from s3://santhosh-common-profile-linked-dataset/analyticsiq/no-token/AIQ_covid_commonprofile_peoplecore credentials=(aws_key_id='AKIARDROVBS2LBUAKQWA' aws_secret_key='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')
  file_format = (type = csv field_delimiter = '|'skip_header = 1)
  validation_mode = 'RETURN_100_ROWS';






# validate the file

copy into "COVID19_PROD"."COVID19_COMMONPROFILE_HEALTHJUMP"."HEALTHJUMP_APPOINTMENT"
  from s3://santhosh-common-profile-linked-dataset/healthjump/no-token/healthjump_covid_commonprofile_appointment/ credentials=(aws_key_id='AKIARDROVBS2LBUAKQWA' aws_secret_key='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')
  file_format = (type = csv field_delimiter = '|'skip_header = 1)
  validation_mode = 'RETURN_100_ROWS';



# ingest the date

copy into "COVID19_PROD"."COVID19_COMMONPROFILE_HEALTHJUMP"."HEALTHJUMP_APPOINTMENT"
  from s3://santhosh-common-profile-linked-dataset/healthjump/no-token/healthjump_covid_commonprofile_appointment/ credentials=(aws_key_id='AKIARDROVBS2LBUAKQWA' aws_secret_key='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')
  file_format = (type = csv field_delimiter = '|'skip_header = 1)
  on_error = 'skip_file';



###################################################

# validate the file

use role ACCOUNTADMIN;
use warehouse compute_wh;


copy into "COVID19_PROD"."COVID19_COMMONPROFILE_HEALTHJUMP"."HEALTHJUMP_DIAGNOSES"
  from s3://santhosh-common-profile-linked-dataset/healthjump/no-token/healthjump_covid_commonprofile_diagnoses/ credentials=(aws_key_id='AKIARDROVBS2LBUAKQWA' aws_secret_key='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')
  file_format = (type = csv field_delimiter = '|'skip_header = 1)
  validation_mode = 'RETURN_100_ROWS';



# ingest the date
use role ACCOUNTADMIN;
use warehouse compute_wh;


copy into "COVID19_PROD"."COVID19_COMMONPROFILE_HEALTHJUMP"."HEALTHJUMP_DIAGNOSES"
  from s3://santhosh-common-profile-linked-dataset/healthjump/no-token/healthjump_covid_commonprofile_diagnoses/ credentials=(aws_key_id='AKIARDROVBS2LBUAKQWA' aws_secret_key='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')
  file_format = (type = csv field_delimiter = '|'skip_header = 1)
  on_error = 'continue';

####################################################



# validate the file

use role ACCOUNTADMIN;
use warehouse compute_wh;


copy into "COVID19_PROD"."COVID19_COMMONPROFILE_HEALTHJUMP"."HEALTHJUMP_LAB_RESULT"
  from s3://santhosh-common-profile-linked-dataset/healthjump/no-token/healthjump_covid_commonprofile_lab_result/ credentials=(aws_key_id='AKIARDROVBS2LBUAKQWA' aws_secret_key='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')
  file_format = (type = csv field_delimiter = '|'skip_header = 1)
  validation_mode = 'RETURN_100_ROWS';



# ingest the date
use role ACCOUNTADMIN;
use warehouse compute_wh;


copy into "COVID19_PROD"."COVID19_COMMONPROFILE_HEALTHJUMP"."HEALTHJUMP_LAB_RESULT"
  from s3://santhosh-common-profile-linked-dataset/healthjump/no-token/healthjump_covid_commonprofile_lab_result/ credentials=(aws_key_id='AKIARDROVBS2LBUAKQWA' aws_secret_key='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')
  file_format = (type = csv field_delimiter = '|'skip_header = 1)
  on_error = 'continue';



  ####################################################



# validate the file

use role ACCOUNTADMIN;
use warehouse compute_wh;


copy into "COVID19_PROD"."COVID19_COMMONPROFILE_HEALTHJUMP"."HEALTHJUMP_MEDICATION"
  from s3://santhosh-common-profile-linked-dataset/healthjump/no-token/healthjump_covid_commonprofile_medication/ credentials=(aws_key_id='AKIARDROVBS2LBUAKQWA' aws_secret_key='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')
  file_format = (type = csv field_delimiter = '|'skip_header = 1)
  validation_mode = 'RETURN_100_ROWS';



# ingest the date
use role ACCOUNTADMIN;
use warehouse compute_wh;


copy into "COVID19_PROD"."COVID19_COMMONPROFILE_HEALTHJUMP"."HEALTHJUMP_MEDICATION"
  from s3://santhosh-common-profile-linked-dataset/healthjump/no-token/healthjump_covid_commonprofile_medication/ credentials=(aws_key_id='AKIARDROVBS2LBUAKQWA' aws_secret_key='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')
  file_format = (type = csv field_delimiter = '|'skip_header = 1)
  on_error = 'continue';




  ####################################################



# validate the file

use role ACCOUNTADMIN;
use warehouse compute_wh;


copy into "COVID19_PROD"."COVID19_COMMONPROFILE_HEALTHJUMP"."HEALTHJUMP_PROCEDURE"
  from s3://santhosh-common-profile-linked-dataset/healthjump/no-token/healthjump_covid_commonprofile_procedure/ credentials=(aws_key_id='AKIARDROVBS2LBUAKQWA' aws_secret_key='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')
  file_format = (type = csv field_delimiter = '|'skip_header = 1)
  validation_mode = 'RETURN_100_ROWS';



# ingest the date
use role ACCOUNTADMIN;
use warehouse compute_wh;


copy into "COVID19_PROD"."COVID19_COMMONPROFILE_HEALTHJUMP"."HEALTHJUMP_PROCEDURE"
  from s3://santhosh-common-profile-linked-dataset/healthjump/no-token/healthjump_covid_commonprofile_procedure/ credentials=(aws_key_id='AKIARDROVBS2LBUAKQWA' aws_secret_key='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')
  file_format = (type = csv field_delimiter = '|'skip_header = 1)
  on_error = 'continue';




  ####################################################



# validate the file

use role ACCOUNTADMIN;
use warehouse compute_wh;


copy into "COVID19_PROD"."COVID19_COMMONPROFILE_HEALTHJUMP"."HEALTHJUMP_SOCIAL_HISTORY"
  from s3://santhosh-common-profile-linked-dataset/healthjump/no-token/healthjump_covid_commonprofile_social_history/ credentials=(aws_key_id='AKIARDROVBS2LBUAKQWA' aws_secret_key='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')
  file_format = (type = csv field_delimiter = '|'skip_header = 1)
  validation_mode = 'RETURN_100_ROWS';



# ingest the date
use role ACCOUNTADMIN;
use warehouse compute_wh;


copy into "COVID19_PROD"."COVID19_COMMONPROFILE_HEALTHJUMP"."HEALTHJUMP_SOCIAL_HISTORY"
  from s3://santhosh-common-profile-linked-dataset/healthjump/no-token/healthjump_covid_commonprofile_social_history/ credentials=(aws_key_id='AKIARDROVBS2LBUAKQWA' aws_secret_key='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')
  file_format = (type = csv field_delimiter = '|'skip_header = 1)
  on_error = 'continue';



  ####################################################



# validate the file

use role ACCOUNTADMIN;
use warehouse compute_wh;


copy into "COVID19_PROD"."COVID19_COMMONPROFILE_HEALTHJUMP"."HEALTHJUMP_SOCIAL_HISTORY"
  from s3://santhosh-common-profile-linked-dataset/healthjump/no-token/healthjump_covid_commonprofile_social_history/ credentials=(aws_key_id='AKIARDROVBS2LBUAKQWA' aws_secret_key='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')
  file_format = (type = csv field_delimiter = '|'skip_header = 1)
  validation_mode = 'RETURN_100_ROWS';



# ingest the date
use role ACCOUNTADMIN;
use warehouse compute_wh;


copy into "COVID19_PROD"."COVID19_COMMONPROFILE_HEALTHJUMP"."HEALTHJUMP_SOCIAL_HISTORY"
  from s3://santhosh-common-profile-linked-dataset/healthjump/no-token/healthjump_covid_commonprofile_social_history/ credentials=(aws_key_id='AKIARDROVBS2LBUAKQWA' aws_secret_key='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')
  file_format = (type = csv field_delimiter = '|'skip_header = 1)
  on_error = 'continue';



  ####################################################



# validate the file

use role ACCOUNTADMIN;
use warehouse compute_wh;


copy into "COVID19_PROD"."COVID19_COMMONPROFILE_HEALTHJUMP"."HEALTHJUMP_VITALS"
  from s3://santhosh-common-profile-linked-dataset/healthjump/no-token/healthjump_covid_commonprofile_vitals/ credentials=(aws_key_id='AKIARDROVBS2LBUAKQWA' aws_secret_key='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')
  file_format = (type = csv field_delimiter = '|'skip_header = 1)
  validation_mode = 'RETURN_100_ROWS';



# ingest the date
use role ACCOUNTADMIN;
use warehouse compute_wh;


copy into "COVID19_PROD"."COVID19_COMMONPROFILE_HEALTHJUMP"."HEALTHJUMP_VITALS"
  from s3://santhosh-common-profile-linked-dataset/healthjump/no-token/healthjump_covid_commonprofile_vitals/ credentials=(aws_key_id='AKIARDROVBS2LBUAKQWA' aws_secret_key='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')
  file_format = (type = csv field_delimiter = '|'skip_header = 1)
  on_error = 'continue';



  ####################################################



# validate the file

use role ACCOUNTADMIN;
use warehouse compute_wh;


copy into "COVID19_PROD"."COVID19_COMMONPROFILE_HEALTHJUMP"."HEALTHJUMP_ENCOUNTER"
  from s3://santhosh-common-profile-linked-dataset/healthjump/no-token/healthjump_covid_commonprofile_encounter/ credentials=(aws_key_id='AKIARDROVBS2LBUAKQWA' aws_secret_key='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')
  file_format = (type = csv field_delimiter = '|'skip_header = 1)
  validation_mode = 'RETURN_100_ROWS';



# ingest the date
use role ACCOUNTADMIN;
use warehouse compute_wh;


copy into "COVID19_PROD"."COVID19_COMMONPROFILE_HEALTHJUMP"."HEALTHJUMP_ENCOUNTER"
  from s3://santhosh-common-profile-linked-dataset/healthjump/no-token/healthjump_covid_commonprofile_encounter/ credentials=(aws_key_id='AKIARDROVBS2LBUAKQWA' aws_secret_key='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')
  file_format = (type = csv field_delimiter = '|'skip_header = 1)
  on_error = 'continue';




  #####################################################

  # validate the file

use role ACCOUNTADMIN;
use warehouse compute_wh;


copy into "COVID19_PROD"."COVID19_COMMONPROFILE_HEALTHJUMP"."HEALTHJUMP_IMMUNIZATION"
  from s3://santhosh-common-profile-linked-dataset/healthjump/no-token/healthjump_covid_commonprofile_immunization/ credentials=(aws_key_id='AKIARDROVBS2LBUAKQWA' aws_secret_key='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')
  file_format = (type = csv field_delimiter = '|'skip_header = 1)
  validation_mode = 'RETURN_100_ROWS';



# ingest the date
use role ACCOUNTADMIN;
use warehouse compute_wh;


copy into "COVID19_PROD"."COVID19_COMMONPROFILE_HEALTHJUMP"."HEALTHJUMP_IMMUNIZATION"
  from s3://santhosh-common-profile-linked-dataset/healthjump/no-token/healthjump_covid_commonprofile_immunization/ credentials=(aws_key_id='AKIARDROVBS2LBUAKQWA' aws_secret_key='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')
  file_format = (type = csv field_delimiter = '|'skip_header = 1)
  on_error = 'continue';



####################################################



# validate the file

use role ACCOUNTADMIN;
use warehouse compute_wh;


copy into "COVID19_PROD"."COVID19_COMMONPROFILE_HEALTHJUMP"."HEALTHJUMP_LAB_ORDER"
  from s3://santhosh-common-profile-linked-dataset/healthjump/no-token/healthjump_covid_commonprofile_lab_order/ credentials=(aws_key_id='AKIARDROVBS2LBUAKQWA' aws_secret_key='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')
  file_format = (type = csv field_delimiter = '|'skip_header = 1)
  validation_mode = 'RETURN_100_ROWS';



# ingest the date
use role ACCOUNTADMIN;
use warehouse compute_wh;


copy into "COVID19_PROD"."COVID19_COMMONPROFILE_HEALTHJUMP"."HEALTHJUMP_LAB_ORDER"
  from s3://santhosh-common-profile-linked-dataset/healthjump/no-token/healthjump_covid_commonprofile_lab_order/ credentials=(aws_key_id='AKIARDROVBS2LBUAKQWA' aws_secret_key='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')
  file_format = (type = csv field_delimiter = '|'skip_header = 1)
  on_error = 'continue';



####################################################



# validate the file

use role ACCOUNTADMIN;
use warehouse compute_wh;


copy into "COVID19_PROD"."COVID19_COMMONPROFILE_HEALTHJUMP"."HEALTHJUMP_LAB_ORDER"
  from s3://santhosh-common-profile-linked-dataset/healthjump/no-token/healthjump_covid_commonprofile_lab_order/ credentials=(aws_key_id='AKIARDROVBS2LBUAKQWA' aws_secret_key='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')
  file_format = (type = csv field_delimiter = '|'skip_header = 1)
  validation_mode = 'RETURN_100_ROWS';



# ingest the date
use role ACCOUNTADMIN;
use warehouse compute_wh;


copy into "COVID19_PROD"."COVID19_COMMONPROFILE_HEALTHJUMP"."HEALTHJUMP_LAB_ORDER"
  from s3://santhosh-common-profile-linked-dataset/healthjump/no-token/healthjump_covid_commonprofile_lab_order/ credentials=(aws_key_id='AKIARDROVBS2LBUAKQWA' aws_secret_key='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')
  file_format = (type = csv field_delimiter = '|'skip_header = 1)
  on_error = 'continue';



####################################################




use role ACCOUNTADMIN;
use warehouse compute_wh;


create or replace Table COVID19_PROD.COVID19_COMMONPROFILE_OFFICEALLY.OFFICE_ALLY_SVC ( CLAIM_NUMBER  VARCHAR(255),  SERVICE_FROM_DATE  VARCHAR(10),  SERVICE_TO_DATE  VARCHAR(10),  PROCEDURE_CODE  VARCHAR(16777216),  PROCEDURE_CODE_QUAL  VARCHAR(16777216),  PROCEDURE_MODIFIER_1  VARCHAR(16777216),  PROCEDURE_MODIFIER_2  VARCHAR(16777216),  PROCEDURE_MODIFIER_3  VARCHAR(16777216),  PROCEDURE_MODIFIER_4  VARCHAR(16777216),  NATIONAL_DRUG_CODE  VARCHAR(255));
create or replace view COVID19_PROD.COVID19_COMMONPROFILE_OFFICEALLY.VOFFICE_ALLY_SVC copy grants as select * from COVID19_PROD.COVID19_COMMONPROFILE_OFFICEALLY.OFFICE_ALLY_SVC;




# validate the file

use role ACCOUNTADMIN;
use warehouse compute_wh;


copy into "COVID19_PROD"."COVID19_COMMONPROFILE_OFFICEALLY"."OFFICE_ALLY_SVC"
  from s3://santhosh-common-profile-linked-dataset/officeally/no-token/SVC_covid_commonprofile/ credentials=(aws_key_id='AKIARDROVBS2LBUAKQWA' aws_secret_key='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')
  file_format = (type = csv field_delimiter = '|'skip_header = 1)
  validation_mode = 'RETURN_100_ROWS';



# ingest the date
use role ACCOUNTADMIN;
use warehouse compute_wh;


copy into "COVID19_PROD"."COVID19_COMMONPROFILE_OFFICEALLY"."OFFICE_ALLY_SVC"
  from s3://santhosh-common-profile-linked-dataset/officeally/no-token/SVC_covid_commonprofile/ credentials=(aws_key_id='AKIARDROVBS2LBUAKQWA' aws_secret_key='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')
  file_format = (type = csv field_delimiter = '|'skip_header = 1)
  on_error = 'continue';

SELECT SYSTEM$CANCEL_QUERY( '01a665a5-0504-28ef-000d-dd070022709e' )


####################################################


# validate the file

use role ACCOUNTADMIN;
use warehouse compute_wh;


copy into "COVID19_PROD"."COVID19_COMMONPROFILE_OFFICEALLY"."OFFICE_ALLY_SVC_INST"
  from s3://santhosh-common-profile-linked-dataset/officeally/no-token/SVC_INST_covid_commonprofile/ credentials=(aws_key_id='AKIARDROVBS2LBUAKQWA' aws_secret_key='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')
  file_format = (type = csv field_delimiter = '|'skip_header = 1)
  validation_mode = 'RETURN_100_ROWS';



# ingest the date
use role ACCOUNTADMIN;
use warehouse compute_wh;


copy into "COVID19_PROD"."COVID19_COMMONPROFILE_OFFICEALLY"."OFFICE_ALLY_SVC_INST"
  from s3://santhosh-common-profile-linked-dataset/officeally/no-token/SVC_INST_covid_commonprofile/ credentials=(aws_key_id='AKIARDROVBS2LBUAKQWA' aws_secret_key='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')
  file_format = (type = csv field_delimiter = '|'skip_header = 1)
  on_error = 'continue';



####################################################


# validate the file

use role ACCOUNTADMIN;
use warehouse compute_wh;


copy into "COVID19_PROD"."COVID19_COMMONPROFILE_ANALYTICSIQ"."ANALYTICSIQ_PEOPLECORE"
  from s3://santhosh-common-profile-linked-dataset/analyticsiq/no-token/AIQ_covid_commonprofile_peoplecore/ credentials=(aws_key_id='AKIARDROVBS2LBUAKQWA' aws_secret_key='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')
  file_format = (type = csv field_delimiter = '|'skip_header = 1)
  validation_mode = 'RETURN_100_ROWS';



# ingest the date
use role ACCOUNTADMIN;
use warehouse compute_wh;


copy into "COVID19_PROD"."COVID19_COMMONPROFILE_ANALYTICSIQ"."ANALYTICSIQ_PEOPLECORE"
  from s3://santhosh-common-profile-linked-dataset/analyticsiq/no-token/AIQ_covid_commonprofile_peoplecore/ credentials=(aws_key_id='AKIARDROVBS2LBUAKQWA' aws_secret_key='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')
  file_format = (type = csv field_delimiter = '|'skip_header = 1)
  on_error = 'continue';




  ############################################################


"COVID19_PROD"."COVID19_COMMONPROFILE_ANALYTICSIQ"
"COVID19_PROD"."COVID19_COMMONPROFILE_HEALTHJUMP"
"COVID19_PROD"."COVID19_COMMONPROFILE_HEALTHWISE"
"COVID19_PROD"."COVID19_COMMONPROFILE_MORTALITY"
"COVID19_PROD"."COVID19_COMMONPROFILE_MUNICHRE"
"COVID19_PROD"."COVID19_COMMONPROFILE_OFFICEALLY"




CREATE ROLE IF NOT EXISTS COVID19_COMMONPROFILE_OFFICEALLY_ROLE;
CREATE WAREHOUSE IF NOT EXISTS COVID19_COMMONPROFILE_OFFICEALLY_WH;
GRANT USAGE,OPERATE ON WAREHOUSE COVID19_COMMONPROFILE_OFFICEALLY_WH TO ROLE COVID19_COMMONPROFILE_OFFICEALLY_ROLE;
GRANT USAGE ON DATABASE covid19_prod TO ROLE COVID19_COMMONPROFILE_OFFICEALLY_ROLE;
GRANT USAGE ON SCHEMA covid19_prod.COVID19_COMMONPROFILE_OFFICEALLY TO ROLE COVID19_COMMONPROFILE_OFFICEALLY_ROLE;
GRANT SELECT ON ALL VIEWS IN SCHEMA covid19_prod.COVID19_COMMONPROFILE_OFFICEALLY TO ROLE COVID19_COMMONPROFILE_OFFICEALLY_ROLE;
GRANT SELECT ON FUTURE VIEWS IN SCHEMA covid19_prod.COVID19_COMMONPROFILE_OFFICEALLY TO ROLE COVID19_COMMONPROFILE_OFFICEALLY_ROLE;
GRANT SELECT ON ALL TABLES IN SCHEMA covid19_prod.COVID19_COMMONPROFILE_OFFICEALLY TO ROLE COVID19_COMMONPROFILE_OFFICEALLY_ROLE;
GRANT SELECT ON FUTURE TABLES IN SCHEMA covid19_prod.COVID19_COMMONPROFILE_OFFICEALLY TO ROLE COVID19_COMMONPROFILE_OFFICEALLY_ROLE;


CREATE ROLE IF NOT EXISTS TESTING_ROLE;
CREATE WAREHOUSE IF NOT EXISTS TESTING_WH;
GRANT USAGE,OPERATE ON WAREHOUSE TESTING_WH TO ROLE TESTING_ROLE;




DROP WAREHOUSE IF EXISTS COVID19_COMMONPROFILE_OFFICEALLY_WH;
DROP WAREHOUSE IF EXISTS COVID19_COMMONPROFILE_ANALYTICSIQ_WH;
DROP WAREHOUSE IF EXISTS COVID19_COMMONPROFILE_HEALTHJUMP_WH;
DROP WAREHOUSE IF EXISTS COVID19_COMMONPROFILE_HEALTHWISE_WH;
DROP WAREHOUSE IF EXISTS COVID19_COMMONPROFILE_MORTALITY_WH;
DROP WAREHOUSE IF EXISTS COVID19_COMMONPROFILE_MUNICHRE_WH;
DROP WAREHOUSE IF EXISTS COVID19_COMMONPROFILE_OFFICEALLY_WH;



REVOKE ROLE COVID19_COMMONPROFILE_OFFICEALLY_ROLE TO ROLE TESTING_ROLE;
GRANT ROLE COVID19_COMMONPROFILE_HEALTHJUMP_ROLE TO ROLE TESTING_ROLE;

GRANT ROLE TESTING_ROLE TO USER SANTOSHK;


SELECT PATIENT_ID FROM "COVID19_PROD"."COVID19_COMMONPROFILE_HEALTHJUMP";



create table if not exists "COVID19_PROD"."COVID19_COMMONPROFILE_HEALTHJUMP"."T1"(col1 integer);

create table if not exists "COVID19_PROD"."COVID19_COMMONPROFILE_ANALYTICSIQ"."T1"(col1 integer);

insert into "COVID19_PROD"."COVID19_COMMONPROFILE_HEALTHJUMP"."T1"(col1) values 
   (2),
   (3),
   (4);


insert into "COVID19_PROD"."COVID19_COMMONPROFILE_ANALYTICSIQ"."T1" (col1) values 
   (1),
   (2),
   (2),
   (3);


select t1.col1, t2.col1
    from "COVID19_PROD"."COVID19_COMMONPROFILE_HEALTHJUMP"."T1" AS t1 inner join "COVID19_PROD"."COVID19_COMMONPROFILE_ANALYTICSIQ"."T1" AS t2
        on t2.col1 = t1.col1
    order by 1,2;




data = [
{"username":"Yuanyuan_Liu","project_number":"21120","datasets":["AIQ_MORTALITY_OFFICEALLY_V2"]},
{"username":"Dimitri_Lopez","project_number":"21120","datasets":["AIQ_MORTALITY_OFFICEALLY_V2"]},
{"username":"MATTEO_SACCAROLA","project_number":"00018","datasets":["AIQ_MORTALITY_OFFICEALLY_V2"]},
{"username":"Li_Shi","project_number":"21098","datasets":["AIQ_MORTALITY_OFFICEALLY_V2"]},
{"username":"Xinming_Du","project_number":"00050","datasets":["AIQ_MORTALITY_OFFICEALLY_V2"]},
{"username":"Changrong_Ji","project_number":"00051","datasets":["AIQ_MORTALITY_OFFICEALLY_V2"]},
{"username":"Priya_Shanmugam","project_number":"00138","datasets":["AIQ_MORTALITY_OFFICEALLY_V2"]},
{"username":"John_Etherton","project_number":"21115","datasets":["AIQ_MORTALITY_OFFICEALLY_V2"]},
{"username":"Rebecca_Gutema","project_number":"21115","datasets":["AIQ_MORTALITY_OFFICEALLY_V2"]},
{"username":"Tianzi_Li","project_number":"21125","datasets":["AIQ_MORTALITY_OFFICEALLY_V2"]},
{"username":"cynthia_williams","project_number":"21060","datasets":["AIQ_MORTALITY_OFFICEALLY_V2"]},
{"username":"Di_Shang","project_number":"21060","datasets":["AIQ_MORTALITY_OFFICEALLY_V2"]},
{"username":"alba_gutierrez","project_number":"00028","datasets":["AIQ_MORTALITY_OFFICEALLY_V2"]}
]






AIQ_MORTALITY_OFFICEALLY_V2
COVID19_COMMONPROFILE_ANALYTICSIQ
COVID19_COMMONPROFILE_HEALTHJUMP
COVID19_COMMONPROFILE_HEALTHWISE
COVID19_COMMONPROFILE_MORTALITY
COVID19_COMMONPROFILE_MUNICHRE
COVID19_COMMONPROFILE_OFFICEALLY



Death Index mortality linked dataset  --  COVID19_COMMONPROFILE_MORTALITY
Healthjump EHR linked dataset -- COVID19_COMMONPROFILE_HEALTHJUMP
OfficeAlly claims linked dataset -- COVID19_COMMONPROFILE_OFFICEALLY
AnalyticsIQ linked dataset -- COVID19_COMMONPROFILE_ANALYTICSIQ
HealthWise Data linked dataset  --  COVID19_COMMONPROFILE_HEALTHWISE
Glooko linked dataset -- (WE DONT HAVE THIS)
AnalyticsIQ+OfficeAlly+Mortality linked dataset -- AIQ_MORTALITY_OFFICEALLY_V2